%read signal
[audioIn,fs]=audioread('Piano.wav');
%choose one column of the matrix if there are harmonies
audioIn = audioIn(:,1);


f0 = pitch(audioIn,fs);
sampleSize = size(f0);
sampleSize = sampleSize(:,1);

interval = round(sampleSize/23);

%vector to store stuff
cat = zeros(23,1);

dog = 0;

notes = 0;

i = 1;
while( i < sampleSize - (interval-1) )
    y = f0(i:i+(interval-1),:);
    ymax = max(y);
    yavg = mean(y);
    
    if( yavg < ymax/2) 
        cat(i:i+(interval-1),1) = 0;
        dog = [dog; 0];
    else
       cat(i:i+(interval-1),1) = ymax;
       notes = [notes;ymax];
       dog = [dog; ymax];
    end
    i = i + (interval-1);
    
end
dog = dog(2:end);

plot(cat)

notes = unique(notes);
max_note = max(notes);
min_note = min(notes(2:end));
c = (max_note - min_note)/10; 

display = ones(4,23)*21;

red = 18;
blue = 20;
green = 19;
yellow = 1.7;

for j = 1:size(dog)
    
    n = dog(j,1);
    switch true
        
        %red
        case n > 0 && n <= c + min_note
            display(1,j) = red;
            
        %red and blue
        case (n > c + min_note && n <= 2*c + min_note)
            display(1,j) = red;
            display(2,j) = blue;
            
        %red and green
        case (n > 2*c + min_note && n <= 3*c + min_note)
            display(1,j) = red;
            display(3,j) = green;
            
        %red and yellow
        case (n > 3*c + min_note && n <= 4*c + min_note)
            display(1,j) = red;
            display(4,j) = yellow;
            
        %blue
        case (n > 4*c + min_note && n <= 5*c + min_note)
            display(2,j) = blue;

        %blue and green
        case (n > 5*c + min_note && n <= 6*c + min_note)
            display(2,j) = blue;
            display(3,j) = green;
            
        %blue and yellow
        case (n > 6*c + min_note && n <= 7*c + min_note)
            display(2,j) = blue;
            display(4,j) = yellow;  
       
       %green
       case (n > 7*c + min_note && n <= 8*c + min_note)
            display(3,j) = green;
        
       %green and yellow
       case (n > 8*c + min_note && n <= 9*c + min_note)
            display(3,j) = green;
            display(4,j) = yellow; 
            
        %yellow  
        otherwise
            display(4,j) = yellow; 
            
    end
end

clims = [0 22];
imagesc(display, clims), colormap colorcube
colorbar
grid on 
ax = gca;
ax.GridAlpha = 1;
set(gca,'ytick',0.5:4.5), set(gca,'xtick',0.5:23.5)
xticklabels(''), yticklabels('')


